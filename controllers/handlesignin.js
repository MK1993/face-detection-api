const jwt=require("jsonwebtoken"),redis=require("redis"),redisClient=redis.createClient({host:"127.0.0.1",port:6379}),signToken=e=>{const t={email:e};return jwt.sign(t,"JWT_SECRET_KEY",{expiresIn:"2 days"})},setToken=(e,t)=>Promise.resolve(redisClient.set(e,t)),createSession=e=>{const{email:t,id:n}=e,s=signToken(t);return setToken(s,n).then(()=>({success:"true",userId:n,token:s})).catch(console.log)},signin=(e,t,n,s)=>{const{email:i,password:r}=e.body;return i&&r?s.select("email","hash").from("login").where("email","=",i).then(e=>{return n.compareSync(r,e[0].hash)?s.select("*").from("users").where("email","=",i).then(e=>e[0]).catch(e=>Promise.reject(e)):Promise.reject("wrong credentials")}).catch(e=>Promise.reject(e)):Promise.reject("incorrect form submission")},getAuthTokenId=(e,t)=>{const{authorization:n}=e.headers;return redisClient.get(n,(e,n)=>e||!n?t.status(401).send("Unauthorized"):t.json({id:n}))},signinAuthentication=(e,t,n,s)=>{const{authorization:i}=e.headers;return i?getAuthTokenId(e,t):signin(e,0,n,s).then(e=>e.id&&e.email?createSession(e):Promise.reject(e)).then(e=>t.json(e)).catch(e=>t.status(400).json(e))};module.exports={signinAuthentication:signinAuthentication,redisClient:redisClient};